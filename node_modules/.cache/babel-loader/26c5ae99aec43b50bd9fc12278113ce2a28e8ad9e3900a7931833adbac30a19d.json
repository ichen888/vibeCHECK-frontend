{"ast":null,"code":"var _jsxFileName = \"/Users/ianchen/Documents/GitHub/vibeCHECK-frontend/src/VoteSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VoteSection({\n  influencerId\n}) {\n  _s();\n  const [vibeStats, setVibeStats] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [hasVoted, setHasVoted] = useState(false);\n\n  // Fetch initial vibe stats\n  useEffect(() => {\n    const fetchVibeStats = async () => {\n      if (!influencerId) {\n        setVibeStats(null);\n        return;\n      }\n      try {\n        setLoading(true);\n        const response = await fetch(`http://127.0.0.1:8000/Influencers`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch vibe stats');\n        }\n        const data = await response.json();\n        const influencer = data.find(inf => inf.id === influencerId);\n        if (influencer) {\n          setVibeStats({\n            goodVibes: influencer.vibe_score,\n            badVibes: 100 - influencer.vibe_score\n          });\n        }\n      } catch (err) {\n        console.error('Error fetching vibe stats:', err);\n        setError('Failed to load vibe statistics');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchVibeStats();\n  }, [influencerId]);\n  const handleVote = async isGoodVibe => {\n    if (!influencerId || hasVoted) return;\n    try {\n      setLoading(true);\n      const response = await fetch(`http://127.0.0.1:8000/Votes/${influencerId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          vote: isGoodVibe ? 'good' : 'bad' // Changed from vote_type to vote\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.text();\n        console.error('Vote failed:', errorData);\n        throw new Error(`Failed to submit vote: ${response.status}`);\n      }\n\n      // Fetch updated stats after voting\n      const statsResponse = await fetch(`http://127.0.0.1:8000/Influencers`);\n      if (!statsResponse.ok) {\n        throw new Error('Failed to fetch updated stats');\n      }\n      const data = await statsResponse.json();\n      const updatedInfluencer = data.find(inf => inf.id === influencerId);\n      if (updatedInfluencer) {\n        setVibeStats({\n          goodVibes: updatedInfluencer.vibe_score,\n          badVibes: 100 - updatedInfluencer.vibe_score\n        });\n        setHasVoted(true);\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      setError('Failed to submit vote');\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vote-section-loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vote-section-error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 23\n  }, this);\n  if (!vibeStats) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vote-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vibe-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"good-vibes-stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Good Vibes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: [vibeStats.goodVibes, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bad-vibes-stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Bad Vibes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: [vibeStats.badVibes, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vote-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `vote-button good-vibe ${hasVoted ? 'voted' : ''}`,\n        onClick: () => handleVote(true),\n        disabled: hasVoted,\n        children: \"Good Vibes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `vote-button bad-vibe ${hasVoted ? 'voted' : ''}`,\n        onClick: () => handleVote(false),\n        disabled: hasVoted,\n        children: \"Bad Vibes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), hasVoted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vote-message\",\n      children: \"Thanks for voting!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n_s(VoteSection, \"3bS2SLgtYdVK6pcNVwknWnlEkaE=\");\n_c = VoteSection;\nvar _c;\n$RefreshReg$(_c, \"VoteSection\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","VoteSection","influencerId","_s","vibeStats","setVibeStats","loading","setLoading","error","setError","hasVoted","setHasVoted","fetchVibeStats","response","fetch","ok","Error","data","json","influencer","find","inf","id","goodVibes","vibe_score","badVibes","err","console","handleVote","isGoodVibe","method","headers","body","JSON","stringify","vote","errorData","text","status","statsResponse","updatedInfluencer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/ianchen/Documents/GitHub/vibeCHECK-frontend/src/VoteSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function VoteSection({ influencerId }) {\n    const [vibeStats, setVibeStats] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [hasVoted, setHasVoted] = useState(false);\n\n    // Fetch initial vibe stats\n    useEffect(() => {\n        const fetchVibeStats = async () => {\n            if (!influencerId) {\n                setVibeStats(null);\n                return;\n            }\n            try {\n                setLoading(true);\n                const response = await fetch(`http://127.0.0.1:8000/Influencers`);\n                if (!response.ok) {\n                    throw new Error('Failed to fetch vibe stats');\n                }\n                const data = await response.json();\n                const influencer = data.find(inf => inf.id === influencerId);\n                if (influencer) {\n                    setVibeStats({\n                        goodVibes: influencer.vibe_score,\n                        badVibes: 100 - influencer.vibe_score\n                    });\n                }\n            } catch (err) {\n                console.error('Error fetching vibe stats:', err);\n                setError('Failed to load vibe statistics');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchVibeStats();\n    }, [influencerId]);\n\n    const handleVote = async (isGoodVibe) => {\n        if (!influencerId || hasVoted) return;\n\n        try {\n            setLoading(true);\n            const response = await fetch(`http://127.0.0.1:8000/Votes/${influencerId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({\n                    vote: isGoodVibe ? 'good' : 'bad'  // Changed from vote_type to vote\n                })\n            });\n\n            if (!response.ok) {\n                const errorData = await response.text();\n                console.error('Vote failed:', errorData);\n                throw new Error(`Failed to submit vote: ${response.status}`);\n            }\n\n            // Fetch updated stats after voting\n            const statsResponse = await fetch(`http://127.0.0.1:8000/Influencers`);\n            if (!statsResponse.ok) {\n                throw new Error('Failed to fetch updated stats');\n            }\n\n            const data = await statsResponse.json();\n            const updatedInfluencer = data.find(inf => inf.id === influencerId);\n            \n            if (updatedInfluencer) {\n                setVibeStats({\n                    goodVibes: updatedInfluencer.vibe_score,\n                    badVibes: 100 - updatedInfluencer.vibe_score\n                });\n                setHasVoted(true);\n            }\n\n        } catch (err) {\n            console.error('Error:', err);\n            setError('Failed to submit vote');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    if (loading) return <div className=\"vote-section-loading\">Loading...</div>;\n    if (error) return <div className=\"vote-section-error\">{error}</div>;\n    if (!vibeStats) return null;\n\n    return (\n        <div className=\"vote-section\">\n            <div className=\"vibe-stats\">\n                <div className=\"good-vibes-stat\">\n                    <span className=\"stat-label\">Good Vibes</span>\n                    <span className=\"stat-value\">{vibeStats.goodVibes}%</span>\n                </div>\n                <div className=\"bad-vibes-stat\">\n                    <span className=\"stat-label\">Bad Vibes</span>\n                    <span className=\"stat-value\">{vibeStats.badVibes}%</span>\n                </div>\n            </div>\n            <div className=\"vote-buttons\">\n                <button \n                    className={`vote-button good-vibe ${hasVoted ? 'voted' : ''}`}\n                    onClick={() => handleVote(true)}\n                    disabled={hasVoted}\n                >\n                    Good Vibes\n                </button>\n                <button \n                    className={`vote-button bad-vibe ${hasVoted ? 'voted' : ''}`}\n                    onClick={() => handleVote(false)}\n                    disabled={hasVoted}\n                >\n                    Bad Vibes\n                </button>\n            </div>\n            {hasVoted && (\n                <div className=\"vote-message\">\n                    Thanks for voting!\n                </div>\n            )}\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}