{"ast":null,"code":"const handleVote = async isGoodVibe => {\n  if (!influencerId || hasVoted) return;\n  try {\n    // Update the endpoint URL to match the database_api.py\n    const response = await fetch(`http://127.0.0.1:8000/Votes/${influencerId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        vote_type: isGoodVibe ? 'good' : 'bad'\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.text();\n      console.error('Server response:', errorData);\n      throw new Error(`Failed to submit vote: ${response.status}`);\n    }\n\n    // Update local state\n    const newStats = await response.json();\n    setVibeStats({\n      goodVibes: newStats.vibe_score,\n      badVibes: 100 - newStats.vibe_score\n    });\n    setHasVoted(true);\n  } catch (err) {\n    console.error('Error submitting vote:', err);\n    setError('Failed to submit vote');\n  }\n};","map":{"version":3,"names":["handleVote","isGoodVibe","influencerId","hasVoted","response","fetch","method","headers","body","JSON","stringify","vote_type","ok","errorData","text","console","error","Error","status","newStats","json","setVibeStats","goodVibes","vibe_score","badVibes","setHasVoted","err","setError"],"sources":["/Users/ianchen/Documents/GitHub/vibeCHECK-frontend/src/VoteSection.js"],"sourcesContent":["const handleVote = async (isGoodVibe) => {\n  if (!influencerId || hasVoted) return;\n\n  try {\n      // Update the endpoint URL to match the database_api.py\n      const response = await fetch(`http://127.0.0.1:8000/Votes/${influencerId}`, {\n          method: 'PUT',\n          headers: {\n              'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n              vote_type: isGoodVibe ? 'good' : 'bad'\n          })\n      });\n\n      if (!response.ok) {\n          const errorData = await response.text();\n          console.error('Server response:', errorData);\n          throw new Error(`Failed to submit vote: ${response.status}`);\n      }\n\n      // Update local state\n      const newStats = await response.json();\n      setVibeStats({\n          goodVibes: newStats.vibe_score,\n          badVibes: 100 - newStats.vibe_score\n      });\n      setHasVoted(true);\n\n  } catch (err) {\n      console.error('Error submitting vote:', err);\n      setError('Failed to submit vote');\n  }\n};"],"mappings":"AAAA,MAAMA,UAAU,GAAG,MAAOC,UAAU,IAAK;EACvC,IAAI,CAACC,YAAY,IAAIC,QAAQ,EAAE;EAE/B,IAAI;IACA;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+BH,YAAY,EAAE,EAAE;MACxEI,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,SAAS,EAAEV,UAAU,GAAG,MAAM,GAAG;MACrC,CAAC;IACL,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACQ,EAAE,EAAE;MACd,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MACvCC,OAAO,CAACC,KAAK,CAAC,kBAAkB,EAAEH,SAAS,CAAC;MAC5C,MAAM,IAAII,KAAK,CAAC,0BAA0Bb,QAAQ,CAACc,MAAM,EAAE,CAAC;IAChE;;IAEA;IACA,MAAMC,QAAQ,GAAG,MAAMf,QAAQ,CAACgB,IAAI,CAAC,CAAC;IACtCC,YAAY,CAAC;MACTC,SAAS,EAAEH,QAAQ,CAACI,UAAU;MAC9BC,QAAQ,EAAE,GAAG,GAAGL,QAAQ,CAACI;IAC7B,CAAC,CAAC;IACFE,WAAW,CAAC,IAAI,CAAC;EAErB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVX,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEU,GAAG,CAAC;IAC5CC,QAAQ,CAAC,uBAAuB,CAAC;EACrC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}