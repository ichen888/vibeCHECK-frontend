{"ast":null,"code":"var _jsxFileName = \"/Users/ianchen/Documents/GitHub/vibeCHECK-frontend/src/RecentContent.js\",\n  _s = $RefreshSig$();\n// RecentContent.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecentContent = ({\n  influencerId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Placeholder comments for when no influencer is selected\n  const placeholderComments = [{\n    id: 1,\n    title: \"Post 1 - 56% Vibes\",\n    content: \"Celebrity gains support with latest post.\"\n  }, {\n    id: 2,\n    title: \"Post 2 - 44% Vibes\",\n    content: \"Recent news affecting vibes significantly.\"\n  }, {\n    id: 3,\n    title: \"Post 3 - 95% Vibes\",\n    content: \"Celebrity's latest appearance is a major hit.\"\n  }];\n  useEffect(() => {\n    const fetchComments = async () => {\n      if (!influencerId) {\n        setComments(placeholderComments);\n        setLoading(false);\n        return;\n      }\n      try {\n        setLoading(true);\n        const response = await fetch('http://127.0.0.1:8000/comments');\n        if (!response.ok) {\n          throw new Error('Failed to fetch comments');\n        }\n        const data = await response.json();\n\n        // Filter comments by influencer_id and get the most recent 3\n        const filteredComments = data.filter(comment => comment.influencer_id === influencerId).sort((a, b) => b.id - a.id).slice(0, 3).map(comment => ({\n          id: comment.id,\n          title: `Comment #${comment.id}`,\n          content: comment.content\n        }));\n        setComments(filteredComments.length > 0 ? filteredComments : placeholderComments);\n      } catch (err) {\n        console.error('Error fetching comments:', err);\n        setError('Failed to load comments');\n        setComments(placeholderComments); // Show placeholder content on error\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchComments();\n  }, [influencerId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading comments...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"content-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recent Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: comment.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(RecentContent, \"9U0+ds+yqH5Twr7odiPeQomUgmg=\");\n_c = RecentContent;\nexport default RecentContent;\nvar _c;\n$RefreshReg$(_c, \"RecentContent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RecentContent","influencerId","_s","comments","setComments","loading","setLoading","error","setError","placeholderComments","id","title","content","fetchComments","response","fetch","ok","Error","data","json","filteredComments","filter","comment","influencer_id","sort","a","b","slice","map","length","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/ianchen/Documents/GitHub/vibeCHECK-frontend/src/RecentContent.js"],"sourcesContent":["// RecentContent.js\nimport React, { useState, useEffect } from 'react';\n\nconst RecentContent = ({ influencerId }) => {\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Placeholder comments for when no influencer is selected\n  const placeholderComments = [\n    { id: 1, title: \"Post 1 - 56% Vibes\", content: \"Celebrity gains support with latest post.\" },\n    { id: 2, title: \"Post 2 - 44% Vibes\", content: \"Recent news affecting vibes significantly.\" },\n    { id: 3, title: \"Post 3 - 95% Vibes\", content: \"Celebrity's latest appearance is a major hit.\" }\n  ];\n\n  useEffect(() => {\n    const fetchComments = async () => {\n      if (!influencerId) {\n        setComments(placeholderComments);\n        setLoading(false);\n        return;\n      }\n\n      try {\n        setLoading(true);\n        const response = await fetch('http://127.0.0.1:8000/comments');\n        if (!response.ok) {\n          throw new Error('Failed to fetch comments');\n        }\n        const data = await response.json();\n\n        // Filter comments by influencer_id and get the most recent 3\n        const filteredComments = data\n          .filter(comment => comment.influencer_id === influencerId)\n          .sort((a, b) => b.id - a.id)\n          .slice(0, 3)\n          .map(comment => ({\n            id: comment.id,\n            title: `Comment #${comment.id}`,\n            content: comment.content\n          }));\n\n        setComments(filteredComments.length > 0 ? filteredComments : placeholderComments);\n      } catch (err) {\n        console.error('Error fetching comments:', err);\n        setError('Failed to load comments');\n        setComments(placeholderComments); // Show placeholder content on error\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchComments();\n  }, [influencerId]);\n\n  if (loading) return <div>Loading comments...</div>;\n  if (error) return <div className=\"error\">{error}</div>;\n\n  return (\n    <section className=\"content-section\">\n      <h3>Recent Comments</h3>\n      {comments.map((comment) => (\n        <div key={comment.id} className=\"content-item\">\n          <h4>{comment.title}</h4>\n          <p>{comment.content}</p>\n        </div>\n      ))}\n    </section>\n  );\n};\n\nexport default RecentContent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}